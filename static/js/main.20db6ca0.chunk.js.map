{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notifications.styled.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.jsx","index.js"],"names":["SectionContainer","styled","section","Section","titel","children","Container","div","Button","button","FeedbackOptions","options","onLeaveFeedback","map","item","index","type","name","onClick","Title","h3","Notification","message","defaultProps","ContainerStatistic","Text","p","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleFeedback","e","value","target","console","log","setState","prevState","countTotalFeedback","this","toFixed","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEaA,EAAmBC,IAAOC,QAAV,sE,OCEd,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACL,EAAD,WACE,6BAAKI,IACJC,KCNA,I,EAAMC,EAAYL,IAAOM,IAAV,sEAITC,EAASP,IAAOQ,OAAV,+VCFJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACN,EAAD,UACGK,EAAQE,KAAI,SAACC,EAAMC,GAAP,OACX,cAACP,EAAD,CAAQQ,KAAK,SAAqBC,KAAMH,EAAMI,QAASN,EAAvD,SACGE,GADwBC,QCN5B,I,MAAMI,EAAQlB,IAAOmB,GAAV,iDCEH,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAQG,IAGjBD,EAAaE,aAAe,CAC1BD,QAAS,qBCPJ,IAAMhB,EAAYL,IAAOM,IAAV,sEAKTiB,EAAqBvB,IAAOM,IAAV,kGAMlBkB,EAAOxB,IAAOyB,EAAV,uECRF,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAAC,EAAD,WACE,4CACCD,EACC,eAACP,EAAD,WACE,eAACC,EAAD,mBAEE,qCAAQG,QAEV,eAACH,EAAD,sBAEE,qCAAQI,QAEV,eAACJ,EAAD,kBAEE,qCAAQK,QAEV,eAACL,EAAD,oBAEE,qCAAQM,QAEV,eAACN,EAAD,sBAEE,qCAAQO,EAAR,aAIJ,cAACX,EAAD,CAAcC,QAAQ,yB,IClCTW,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,eAAiB,SAAAC,GACf,IAAMC,EAAQD,EAAEE,OAAOrB,KACvBsB,QAAQC,IAAIH,GAEZ,EAAKI,UAAS,SAAAC,GAAS,sBACpBL,EAAQK,EAAUL,GAAS,O,EAGhCM,mBAAqB,WACnB,MAA+B,EAAKT,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OAFA,EAAuBC,IACED,EAAUD,G,qEAGrC,WAEE,OADiBgB,KAAKV,MAAdN,KACQgB,KAAKD,qBAAwB,KAAKE,QAAQ,K,oBAG5D,WACE,MAA+BD,KAAKV,MAA5BN,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QACblB,EAAUmC,OAAOC,KAAKH,KAAKV,OACjC,OACE,eAAC/B,EAAD,CAASC,MAAM,wBAAf,UACE,cAACM,EAAD,CACEC,QAASA,EACTC,gBAAiBgC,KAAKT,iBAExB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKD,qBACZX,mBAAoBY,KAAKI,2C,GAvCFC,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.20db6ca0.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  text-align: center;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionContainer } from './Section.styled';\n\nexport default function Section({ titel, children }) {\n  return (\n    <SectionContainer>\n      <h1>{titel}</h1>\n      {children}\n    </SectionContainer>\n  );\n}\n\nSection.propTypes = {\n  titel: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\nexport const Button = styled.button`\n  border: none;\n  padding: 5px 25px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  margin: 4px;\n  transition-duration: 0.4s;\n  cursor: pointer;\n  text-transform: capitalize;\n  border-radius: 10px;\n  &:hover {\n    background-color: #ffa500;\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container } from './FeedbackOptions.styled';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Container>\n      {options.map((item, index) => (\n        <Button type=\"button\" key={index} name={item} onClick={onLeaveFeedback}>\n          {item}\n        </Button>\n      ))}\n    </Container>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  font-weight: 300;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from './Notifications.styled';\n\nexport default function Notification({ message }) {\n  return <Title>{message}</Title>;\n}\n\nNotification.defaultProps = {\n  message: 'No feedback given',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const ContainerStatistic = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Text = styled.p`\n  margin-right: 5px;\n  font-weight: 300;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from 'components/Notification';\nimport { Container, ContainerStatistic, Text } from './Statistics.styled';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <Container>\n      <h2>Statistics</h2>\n      {total ? (\n        <ContainerStatistic>\n          <Text>\n            Good:\n            <span> {good}</span>\n          </Text>\n          <Text>\n            Neutral:\n            <span> {neutral}</span>\n          </Text>\n          <Text>\n            Bad:\n            <span> {bad}</span>\n          </Text>\n          <Text>\n            Total:\n            <span> {total}</span>\n          </Text>\n          <Text>\n            Positiv:\n            <span> {positivePercentage}%</span>\n          </Text>\n        </ContainerStatistic>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n};\n","import Section from 'components/Section';\nimport React, { Component } from 'react';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = e => {\n    const value = e.target.name;\n    console.log(value);\n\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalCount = bad + neutral + good;\n    return totalCount;\n  };\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    return ((good / this.countTotalFeedback()) * 100).toFixed(0);\n  }\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const options = Object.keys(this.state);\n    return (\n      <Section titel=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.handleFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}